{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "bcomp",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#controls"
		},
		{
			"include": "#registers"
		},
		{
			"include": "#symbols"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#mnemonics"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#labels"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.bcomp",
					"begin": ";",
					"end": "\\n"
				}
			]
		},
		"symbols": {
			"patterns": [
				{
					"name": "keyword.symbol.bcomp",
					"match": "(?:\\$|\\+|\\-|\\&|\\#|\\?)"
				}
			]
		},
		"registers": {
			"patterns": [
				{
					"name": "storage.type.register.bcomp",
					"match": "\\b(?:SP|IP|AC|BR|AR|DR|IP|CR|IR)\\b"
				}
			]
		},
		"controls": {
			"patterns": [
				{
					"name": "support.function.bcomp",
					"match": "\\b(?:START|WORD|DUP|ORG|END)\\b"
				}
			]
		},
		"string-character-escape": {
			"patterns": [
				{
					"name": "constant.character.escape.bcomp",
					"match": "\\\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)"
				}
			]
		},
		"mnemonics": {
			"patterns": [
				{
					"name": "keyword.mnemonic.bcomp",
					"match": "\\s(?i:AND|OR|ADD|ADC|SUB|CMP|LOOP|LD|SWAM|JUMP|CALL|ST|NOP|HLT|CLA|NOT|CLC|CMC|ROL|ROR|ASL|ASR|SXTB|SWAB|INC|DEC|NEG|POP|POPF|RET|IRET|PUSH|PUSHF|SWAP|BEQ|BZS|BNE|BZC|BMI|BNS|BPL|BCS|BCC|BNC|BVS|BHIS|BLO|BVC|BLT|BGE|BR|DI|EI|IN|OUT|INT)\\s"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "invalid",
					"match": "^\\{5}"
				},
				{
					"name": "constant.numeric.integer.hexadecimal.bcomp",
					"match": "[\\$#][0-9a-fA-F]+"
				},
				{
					"name": "constant.numeric.integer.hexadecimal.bcomp",
					"match": "(\\-?[0-9a-fA-F]+[hH])\\b"
				},
				{
					"name": "constant.numeric.integer.hexadecimal.bcomp",
					"match": "(\\-?0x[0-9a-fA-F]+)\\b"
				},
				{
					"name": "constant.numeric.integer.decimal.bcomp",
					"match": "\\-?\\d+"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"match": "(?i:(af'))",
					"captures": {
						"1": {
							"name": "support.type.register.bcomp"
						}
					}
				}
			]
		},
		"labels": {
			"patterns": [
				{
					"match": "(\\@?(\\.?[a-zA-Z_]\\w*)+)",
					"name": "entity.name.function.label.bcomp"
				}
			]
		}
	},
	"scopeName": "source.bcomp"
}
